@inject TomasGreen.Web.CustomLocalizer localizer
@model IEnumerable<TomasGreen.Model.Models.Article>

@{
    ViewData["Title"] = localizer["Index"];
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-responsive">
    <thead>
        <tr class="bg-info">
            <th>
                @Html.DisplayName(localizer["Article"])
            </th>
            <th>
                @Html.DisplayName(localizer["Category"])
            </th>
            <th>
                @Html.DisplayName(localizer["Country"])
            </th>
            <th>
                @Html.DisplayName(localizer["Unit"])
            </th>
            <th>
                @Html.DisplayName(localizer["Form"])
            </th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArticleCategory.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArticleUnit.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArticlePackageForm.Name)
                </td>

                <td>
                    @await Html.PartialAsync("~/Views/Shared/_IndexLinks.cshtml", item.ID)
                </td>
            </tr>
        }
    </tbody>
</table>
