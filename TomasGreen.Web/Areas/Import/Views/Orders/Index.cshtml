@inject TomasGreen.Web.CustomLocalizer localizer

@model IEnumerable<TomasGreen.Model.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">@localizer["Create New"]</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @localizer[@Html.DisplayNameFor(model => model.Company)]
            </th>

            <th>
                @localizer[@Html.DisplayNameFor(model => model.OrderDate)]

            </th>

            <th>
                @localizer[@Html.DisplayNameFor(model => model.TotalPrice)]

            </th>
            <th>
                @localizer[@Html.DisplayNameFor(model => model.OrderPaid)]

            </th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @item.TotalPrice?.ToString("C")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderPaid)
                </td>


                <td>
                    <a asp-action="Create" asp-route-id="@item.ID">@localizer["Edit"]</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">@localizer["Details"]</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">@localizer["Delete"]</a>
                </td>
            </tr>
        }
    </tbody>
</table>
